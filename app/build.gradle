apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    signingConfigs {
        release {
            keyAlias 'baidu_ocr'
            keyPassword '123456'
            storeFile file('C:/LiangJ/appworkspace/OCRDemo/ocr.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.resmed.liangj.ocr"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            // 自定义APK输出配置
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "curative_ocr_${variant.productFlavors[0].name}_v${defaultConfig.versionName}_${releaseTime()}.apk"
                        outputFileName = fileName
                    }
                }
            }
        }
    }

    flavorDimensions "default"
    productFlavors {
        kuan { dimension "default" }
        xiaomi { dimension "default" }
        qh360 { dimension "default" }
        baidu { dimension "default" }
        wandoujia { dimension "default" }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    dexOptions {
        jumboMode = true
        incremental true
        javaMaxHeapSize "2g"
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

//配置greenDao
greendao {
    schemaVersion 1
    daoPackage 'com.resmed.liangj.ocr.greendao'
    targetGenDir 'src/main/java'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/ocr-sdk.jar')
    implementation project(':ocr_ui')
    implementation project(':sqlitetoexcel')
    implementation project(':matisse')
    implementation project(':rxeasyhttp')

    implementation rootProject.ext.dependencies.appcompatV7
    implementation rootProject.ext.dependencies.recyclerviewV7
    implementation rootProject.ext.dependencies.constraintLayout

    implementation rootProject.ext.dependencies.gson

    // add library
    implementation rootProject.ext.dependencies.greendao
    // This is only needed if you want to use encrypted databases
    implementation rootProject.ext.dependencies.sqlcipher

    // Android 6.0权限动态申请
    implementation rootProject.ext.dependencies.rxpermissions
    implementation rootProject.ext.dependencies.rxbinding

    // EventBus
    implementation rootProject.ext.dependencies.eventbus

    // 进度条
    implementation rootProject.ext.dependencies.loadingdialog

    implementation rootProject.ext.dependencies.glide
    implementation rootProject.ext.dependencies.picasso

}